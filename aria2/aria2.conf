# 文件保存目录
dir=/aria2/data
# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M
disk-cache=32M
# 断点续传
continue=true
# 始终尝试断点续传，无法断点续传则终止下载，默认：true
always-resume=false
# 获取服务器文件时间
remote-time=true

# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc
# 预分配所需时间: none < falloc ? trunc < prealloc
# falloc和trunc则需要文件系统和内核支持
# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项
file-allocation=none

## 下载连接相关 ##

# 最大同时下载任务数, 运行时可修改, 默认:5
max-concurrent-downloads=100
# 同一服务器连接数, 添加时可指定, 默认:1
# 官方的aria2最高设置为16, 如果需要设置任意数值请重新编译aria2
max-connection-per-server=16
# 整体下载速度限制, 运行时可修改, 默认:0（不限制）
max-overall-download-limit=0
# 单个任务下载速度限制, 默认:0（不限制）
max-download-limit=0
# 整体上传速度限制, 运行时可修改, 默认:0（不限制）
max-overall-upload-limit=0
# 单个任务上传速度限制, 默认:0（不限制）
max-upload-limit=0
# 禁用IPv6, 默认:false
disable-ipv6=true
# 支持GZip，默认:false
http-accept-gzip=true
# 最小分片,假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载
min-split-size=4M
# 单个任务分片数, 添加时可指定, 默认:5
split=64

## 进度保存相关 ##
# 从会话文件中读取下载任务
input-file=/aria2/conf/aria2.session
# 在Aria2退出时保存错误的、未完成的下载任务到会话文件
save-session=/aria2/conf/aria2.session
# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0
save-session-interval=1
# 自动保存任务进度时间（秒），0为退出时才保存，默认：60
auto-save-interval=1
# 强制保存会话, 即使任务已经完成, 默认:false
# 开启后会在任务完成后依然保留 .aria2 文件，文件被移除且任务存在的情况下重启后会重新下载。
# 关闭后已完成的任务列表会在重启后清空。
# PT 下载持续做种需求建议开启，防止意外重启后列表被清空。
force-save=true
# 保存通过 WebUI 上传的种子文件(.torrent)，默认:true
# 所有涉及种子文件保存的选项都建议开启，不保存种子文件重启会导致任务丢失。
rpc-save-upload-metadata=true
# 当下载的是一个种子文件(.torrent)时, 自动开始下载, 默认:true，可选：false|mem
# true：保存种子文件
# false：仅下载种子文件
# mem：将种子保存在内存中
follow-torrent=true
# 保存磁力链接元数据为种子文件(.torrent), 默认:false
bt-save-metadata=true
# 加载已保存的元数据文件(.torrent)，默认:false
bt-load-saved-metadata=true
# 删除 BT 下载任务中未选择文件，默认:false
bt-remove-unselected-file=true

## RPC 设置 ##
# 启用 JSON-RPC/XML-RPC 服务器, 默认:false
enable-rpc=true
# 接受所有远程请求, 默认:false
rpc-allow-origin-all=true
# 允许外部访问, 默认:false
rpc-listen-all=true
# RPC 监听端口, 默认:6800
rpc-listen-port=6800
# RPC 最大请求大小
rpc-max-request-size=10M

#日志设置
log-level=warn
# log=/etc/aria2/aria2.log
console-log-level=notice

## BT/PT下载相关 ##
# BT监听端口(TCP)
# bt-external-ip=61.130.53.150
# listen-port=57788

# 客户端伪装, PT需要
peer-id-prefix=-TR2940-
user-agent=Transmission/2.94
peer-agent=Transmission/2.94

# 继续之前的BT任务时, 无需再次校验, 默认:false
bt-seed-unverified=true
# 针对BT服务器的请求间隔 为了降低PT站负载,这里最好设置大点
bt-tracker-interval=60
# 单个种子最大连接数, 默认:55  PT站似乎对这个很在意 那就改的比TR还小呗
bt-max-peers=30
# 最小分享率
seed-ratio = 0
# 最小做种时间, 单位:分
# seed-time = 60000
# 分离做种任务
bt-detach-seed-only=true

# 打开DHT功能, PT需要禁用, 默认:true
enable-dht=false
# # 打开IPv6 DHT功能, PT需要禁用
enable-dht6=false
# 本地节点查找, PT需要禁用, 默认:false
bt-enable-lpd=false
# # 种子交换, PT需要禁用, 默认:true
enable-peer-exchange=false
# # 每个种子限速, 对少种的PT很有用, 默认:50K
bt-request-peer-speed-limit=10M
# bt-tracker=udp://62.138.0.158:6969/announce,udp://188.241.58.209:6969/announce,udp://151.80.120.112:2710/announce,udp://151.80.120.114:2710/announce,udp://93.158.213.92:1337/announce,udp://185.19.107.254:80/announce,udp://185.225.17.100:1337/announce,udp://208.83.20.20:6969/announce,udp://5.206.19.247:6969/announce,udp://37.235.174.46:2710/announce,udp://142.44.243.4:1337/announce,udp://195.154.52.99:80/announce,udp://54.37.235.149:6969/announce,udp://212.1.226.176:2710/announce,udp://89.234.156.205:451/announce,udp://159.100.245.181:6969/announce,udp://45.56.74.11:6969/announce,udp://51.15.226.113:6969/announce,udp://176.113.71.19:6961/announce,udp://51.15.40.114:80/announce
